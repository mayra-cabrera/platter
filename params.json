{"name":"Platter","tagline":"A solution to create custom Rails apps used at @icalialabs","body":"# [Platter](https://github.com/IcaliaLabs/platter)\r\n\r\n[![Gem Version](https://badge.fury.io/rb/platter.svg)](http://badge.fury.io/rb/platter)\r\n\r\n**Platter** is the evolution of [railsAppCustomGenerator](https://github.com/IcaliaLabs/railsAppCustomGenerator) with the intention to create rails app with the basic setup we use at [@icalialabs](http://icalialabs.com). It was created by [Abraham Kuri](https://twitter.com/kurenn) from [Icalia Labs](http://twitter.com/icalialabs).*\r\n\r\n**Platter needs ruby 2.2.1 in order to run**\r\n\r\n## Table of contents\r\n- [Installation](#installation)\r\n- [Usage](#usage)\r\n- [What it actually do?](#what-it-actually-do)\r\n- [Bug tracker & feature request](#bug-tracker-&-feature-request)\r\n- [Contributing](#contributing)\r\n- [Community](#community)\r\n- [Heroes](#heroes)\r\n- [License](#license)\r\n\r\n## Quick start\r\n\r\nTo install the gem you can just run the following command:\r\n\r\n```console\r\n% gem install platter\r\n```\r\n\r\nYou now have access to the `platter` command through the CLI.\r\n\r\n## Usage\r\n\r\nTo create a rails app the Icalia way, just use the platter command:\r\n\r\n```console\r\n% platter anIcaliaWayRailsApp\r\n```\r\n\r\nThis will create a rails app with the bare bones to start building an app at [Icalia](http://icalialabs.com)\r\n\r\n### Options for platter\r\n\r\n| Option Name  | Description | Alias | Default |\r\n| ------------- | ------------- | ------------- | ------------- |\r\n| --database  | Configure for selected database. PostgreSQL by default.  | -d | postgresql |\r\n| --skip\\_test_unit | Skip Test::Unit files  | -T | true |\r\n| --skip\\_turbo_links | Skips the turbolinks gem | - | true |\r\n| --api | Adds API support gems and directory bare bones | - | true |\r\n| --skip\\_bundle | Don't run bundle install | -B | true |\r\n\r\n### Api\r\n--\r\n\r\n```console\r\n% platter anIcaliaWayRailsApp --api\r\n```\r\n\r\n## What it actually do?\r\n\r\nPlatter comes with a lot of goodies. \r\n\r\n**The Gemfile looks like:**\r\n\r\n```ruby\r\nsource \"https://rubygems.org\"\r\n\r\nruby \"2.2.1\"\r\n\r\ngem \"rails\", \"4.2.1\"\r\ngem \"delayed_job_active_record\"\r\ngem \"jquery-rails\"\r\ngem \"pg\"\r\ngem \"sass-rails\", \"~> 5.0\"\r\ngem \"coffee-rails\", \"~> 4.1.0\"\r\ngem \"uglifier\", \">= 1.3.0\"\r\ngem \"puma\"\r\n\r\ngroup :development do\r\n  gem \"spring\"\r\n  gem \"spring-commands-rspec\"\r\n  gem \"web-console\"\r\nend\r\n\r\ngroup :development, :test do\r\n  gem \"awesome_print\"\r\n  gem \"factory_girl_rails\"\r\n  gem \"pry-rails\"\r\n  gem \"rspec-rails\", \"~> 3.1.0\"\r\n  gem \"ffaker\"\r\nend\r\n\r\n# Test gems\r\ngroup :test do\r\n  gem \"database_cleaner\"\r\n  gem \"shoulda-matchers\"\r\nend\r\n\r\n# Production and staging gems\r\ngroup :production, :staging do\r\n  gem \"rails_12factor\"\r\n  gem \"exception_notification\"\r\nend\r\n```\r\n\r\nIt will also:\r\n\r\n1. Setup the testing environment with Rspec, FactoryGirl, DatabaseCleaner.\r\n2. Setup an staging environment to deploy to this environment\r\n3. Provides the necessary configuration for the PUMA server run with Foreman\r\n4. A setup script for new developers\r\n5. Adds configuration for ActiveJob and DelayedJob\r\n6. In case of an API, it will add Versionist and ActiveModelSerializers, along with a version 1 structure.\r\n7. Adds configuration for ActionMailer to run with Sendgrid\r\n8. Setup the project with git providing an initial commit\r\n\r\n\r\n## Bug tracker & feature request\r\n\r\nFor bugs and feature request, head to the [issues](https://github.com/IcaliaLabs/platter/issues) section and if necessary create one.\r\n\r\n\r\n## Contributing\r\n\r\nPlease submit all pull requests against a separate branch. Please follow the standard for naming the variables, mixins, etc.\r\n\r\nIn case you are wondering what to attack, we hnow have a milestone with the version to work, some fixes and refactors. Feel free to start one.\r\n\r\nAlso remember to respect the [Code of Conduct](https://github.com/IcaliaLabs/platter/blob/master/CODE_OF_CONDUCT.md) for open source projects.\r\n\r\nThanks!\r\n\r\n## Community\r\n\r\nKeep track of new feautres, development issues and community news.\r\n\r\n* Have a question about anything, email us at weare@icalialabs.com\r\n\r\n\r\n## Heroes\r\n\r\n**Abraham Kuri**\r\n\r\n+ [http://twitter.com/kurenn](http://twitter.com/kurenn)\r\n+ [http://github.com/kurenn](http://github.com/kurenn)\r\n+ [http://klout.com/#/kurenn](http://klout.com/#/kurenn)\r\n\r\n\r\n## Copyright and license\r\n\r\nCode and documentation copyright 2013-2014 Icalia Labs. Code released under [the MIT license](LICENSE).","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}